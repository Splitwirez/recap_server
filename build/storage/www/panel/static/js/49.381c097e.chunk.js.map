{"version":3,"sources":["views/Users/User.js","utils/requests.js"],"names":["User","props","_this","Object","_Users_Vitor_Projetos_Programas_Darkspore_DLS_panel_recap_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_Vitor_Projetos_Programas_Darkspore_DLS_panel_recap_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_Vitor_Projetos_Programas_Darkspore_DLS_panel_recap_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","userMail","match","params","id","state","that","_Users_Vitor_Projetos_Programas_Darkspore_DLS_panel_recap_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","Requests","dlsApiGet","mail","response","setState","user","data","error","valuesToMerge","_","merge","applyChanges","account","creature_rewards","level","xp","decks","name","category","slot","locked","creatures","save","dlsApiPost","_this2","undefined","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","lg","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","email","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","responsive","striped","hover","type","checked","tutorial_completed","onChange","e","target","value","parseInt","dna","reactstrap__WEBPACK_IMPORTED_MODULE_14__","block","color","onClick","skipTutorial","Component","str","key","encodeURIComponent","method","successCallback","errorCallback","objectToGetParams","axios","get","then","catch","getParams","postParams","post"],"mappings":"wQAKMA,cAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IAEN,IAAMQ,EAAWR,EAAMS,MAAMC,OAAOC,GACpCV,EAAKW,MAAQ,GACbX,EAAKW,MAAMJ,SAAWA,EAEtB,IAAIK,EAAIX,OAAAY,EAAA,EAAAZ,CAAAD,GAPS,OAQjBc,IAASC,UAAU,wBAAyB,CAACC,KAAKT,GAAU,SAASU,GACnEL,EAAKM,SAAS,CAACC,KAAMF,EAASG,KAAKD,QACnC,SAASE,MAVMrB,4EAeNsB,GACXnB,KAAKe,SAAS,CAACC,KAAMI,IAAEC,MAAMrB,KAAKQ,MAAMQ,KAAMG,4CAI9CnB,KAAKsB,aAAa,CAACC,QAAQ,CAACC,iBAAiB,EAAGC,MAAM,EAAGC,GAAG,KACzCC,MAAM,CAAC,CAACC,KAAK,UAAWrB,GAAG,EAAGsB,SAAS,EAAGC,KAAK,EAAGC,OAAO,EAAGC,UAAU,OACzFhC,KAAKiC,sCAILtB,IAASuB,WAAW,wBAAyB,CAACrB,KAAKb,KAAKQ,MAAMJ,UAAWJ,KAAKQ,MAAMQ,KACpF,SAASF,KAEP,SAASI,uCAKJ,IAAAiB,EAAAnC,KACHgB,EAAOhB,KAAKQ,MAAMQ,KACtB,YAAiBoB,IAATpB,EAAqB,aAC3BqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,GAAI,GACPN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAArB,cAAsDxB,EAAK8B,QAE7DT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACIV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,OAAK,GAC7Bd,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,cAASvB,EAAKY,QAEpBS,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOa,KAAK,WAAWC,QAASrC,EAAKO,QAAQ+B,mBACtCC,SAAU,SAACC,GAAD,OAAOrB,EAAKb,aAAa,CAACC,QAAQ,CAAC+B,mBAAoBE,EAAEC,OAAOJ,cADrF,uBAKFhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOa,KAAK,SAASM,MAAO1C,EAAKO,QAAQE,MAClC8B,SAAU,SAACC,GAAD,OAAOrB,EAAKb,aAAa,CAACC,QAAQ,CAACE,MAAOkC,SAASH,EAAEC,OAAOC,eAEnFrB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOa,KAAK,SAASM,MAAO1C,EAAKO,QAAQG,GAClC6B,SAAU,SAACC,GAAD,OAAOrB,EAAKb,aAAa,CAACC,QAAQ,CAACG,GAAIiC,SAASH,EAAEC,OAAOC,eAEhFrB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOa,KAAK,SAASM,MAAO1C,EAAKO,QAAQqC,IAClCL,SAAU,SAACC,GAAD,OAAOrB,EAAKb,aAAa,CAACC,QAAQ,CAACqC,IAAKD,SAASH,EAAEC,OAAOC,eA6CjFrB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQC,OAAK,EAACC,MAAM,UAAUC,QAAS,kBAAM7B,EAAK8B,iBAAlD,kBACJ5B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQC,OAAK,EAACC,MAAM,UAAUC,QAAS,kBAAM7B,EAAKF,SAAlD,wBAvHTiC,aAoIJvE,sFCvITgB,iHACuBL,GACrB,IAAI6D,EAAM,GACV,IAAK,IAAIC,KAAO9D,EACA,KAAR6D,IACAA,GAAO,KAEXA,GAAOC,EAAM,IAAMC,mBAAmB/D,EAAO8D,IAEjD,OAAOD,oCAEMG,EAAQhE,EAAQiE,EAAiBC,GAC9C,IAAIL,EAAMxD,EAAS8D,kBAAkBnE,GACrCoE,IAAMC,IAAI,mBAAmBL,EAAO,IAAIH,GACnCS,KAAK,SAAC9D,GACHyD,EAAgBzD,KAEnB+D,MAAM,SAAC3D,GACJsD,EAActD,wCAIRoD,EAAQQ,EAAWC,EAAYR,EAAiBC,GAC9D,IAAIL,EAAMxD,EAAS8D,kBAAkBK,GACrCJ,IAAMM,KAAK,mBAAmBV,EAAO,IAAIH,EAAKY,GACzCH,KAAK,SAAC9D,GACHyD,EAAgBzD,KAEnB+D,MAAM,SAAC3D,GACJsD,EAActD,wCAIRZ,EAAQiE,EAAiBC,GACvC,IAAIL,EAAM,GACV,IAAK,IAAIC,KAAO9D,EACA,KAAR6D,IACAA,GAAO,KAEXA,GAAOC,EAAM,IAAMC,mBAAmB/D,EAAO8D,IAEjDM,IAAMC,IAAI,aAAaR,GAClBS,KAAK,SAAC9D,GACHyD,EAAgBzD,KAEnB+D,MAAM,SAAC3D,GACJsD,EAActD,cAIfP","file":"static/js/49.381c097e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash'\nimport { Button, Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport Requests from '../../utils/requests'\n\nclass User extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const userMail = props.match.params.id;\n    this.state = {};\n    this.state.userMail = userMail;\n    \n    var that = this;\n    Requests.dlsApiGet('api.panel.getUserInfo', {mail:userMail},function(response){\n      that.setState({user: response.data.user});\n    },function(error){\n\n    });\n  }\n\n  applyChanges(valuesToMerge) {\n    this.setState({user: _.merge(this.state.user, valuesToMerge)});\n  }\n\n  skipTutorial() {\n    this.applyChanges({account:{creature_rewards:1, level:2, xp:9000},\n                       decks:[{name:'Squad 1', id:1, category:0, slot:1, locked:0, creatures:[]}]});\n    this.save();\n  }\n\n  save() {\n    Requests.dlsApiPost('api.panel.setUserInfo', {mail:this.state.userMail}, this.state.user,\n    function(response){\n      \n    },function(error){\n\n    });\n  }\n\n  render() {\n    var user = this.state.user;\n    return (user === undefined ? 'Loading...' :\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col lg={6}>\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>User mail: {user.email}</strong>\n              </CardHeader>\n              <CardBody>\n                  <Table responsive striped hover>\n                    <tbody>\n                      <tr>\n                        <td>Name:</td>\n                        <td><strong>{user.name}</strong></td>\n                      </tr>\n                      <tr>\n                        <td><input type=\"checkbox\" checked={user.account.tutorial_completed} \n                                   onChange={(e) => this.applyChanges({account:{tutorial_completed: e.target.checked}})}/>\n                            Tutorial completed\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Level:</td>\n                        <td><input type=\"number\" value={user.account.level} \n                                   onChange={(e) => this.applyChanges({account:{level: parseInt(e.target.value)}})}/></td>\n                      </tr>\n                      <tr>\n                        <td>XP:</td>\n                        <td><input type=\"number\" value={user.account.xp} \n                                   onChange={(e) => this.applyChanges({account:{xp: parseInt(e.target.value)}})}/></td>\n                      </tr>\n                      <tr>\n                        <td>DNA:</td>\n                        <td><input type=\"number\" value={user.account.dna} \n                                   onChange={(e) => this.applyChanges({account:{dna: parseInt(e.target.value)}})}/></td>\n                      </tr>\n\n\n                      {/* bool tutorialCompleted = false;\n                      bool grantAllAccess = false;\n                      bool grantOnlineAccess = false;\n\n                      uint32_t chainProgression = 0;\n                      uint32_t creatureRewards = 0;\n\n                      uint32_t currentGameId = 1;\n                      uint32_t currentPlaygroupId = 1;\n\n                      uint32_t defaultDeckPveId = 1;\n                      uint32_t defaultDeckPvpId = 1;\n\n                      uint32_t level = 1;\n                      uint32_t xp = 0;\n                      uint32_t dna = 0;\n                      uint32_t avatarId = 0;\n                      uint32_t id = 1;\n\n                      uint32_t newPlayerInventory = 0;\n                      uint32_t newPlayerProgress = 0;\n\n                      uint32_t cashoutBonusTime = 0;\n                      uint32_t starLevel = 0;\n\n                      uint32_t unlockCatalysts = 0;\n                      uint32_t unlockDiagonalCatalysts = 0;\n                      uint32_t unlockInventory = 0;\n                      uint32_t unlockFuelTanks = 0;\n                      uint32_t unlockPveDecks = 0;\n                      uint32_t unlockPvpDecks = 0;\n                      uint32_t unlockStats = 0;\n                      uint32_t unlockInventoryIdentify = 0;\n                      uint32_t unlockEditorFlairSlots = 0;\n\n                      uint32_t upsell = 0;\n\n                      uint32_t capLevel = 0;\n                      uint32_t capProgression = 0; */}\n\n\n                      <tr>\n                        <td><Button block color=\"primary\" onClick={() => this.skipTutorial()}>Skip Tutorial</Button></td>\n                        <td><Button block color=\"primary\" onClick={() => this.save()}>Save</Button></td>\n                      </tr>\n                    </tbody>\n                  </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default User;\n","import axios from 'axios';\n\nclass Requests {\n    static objectToGetParams(params) {\n        var str = \"\";\n        for (var key in params) {\n            if (str !== \"\") {\n                str += \"&\";\n            }\n            str += key + \"=\" + encodeURIComponent(params[key]);\n        }\n        return str;\n    }\n    static dlsApiGet(method, params, successCallback, errorCallback) {\n        var str = Requests.objectToGetParams(params);\n        axios.get('/dls/api?method='+method+'&'+str)\n            .then((response) => {\n                successCallback(response);\n            })\n            .catch((error) => {\n                errorCallback(error);\n            });\n    }\n\n    static dlsApiPost(method, getParams, postParams, successCallback, errorCallback) {\n        var str = Requests.objectToGetParams(getParams);\n        axios.post('/dls/api?method='+method+'&'+str, postParams)\n            .then((response) => {\n                successCallback(response);\n            })\n            .catch((error) => {\n                errorCallback(error);\n            });\n    }\n\n    static gameApiGet(params, successCallback, errorCallback) {\n        var str = \"\";\n        for (var key in params) {\n            if (str !== \"\") {\n                str += \"&\";\n            }\n            str += key + \"=\" + encodeURIComponent(params[key]);\n        }\n        axios.get('/game/api?'+str)\n            .then((response) => {\n                successCallback(response);\n            })\n            .catch((error) => {\n                errorCallback(error);\n            });\n    }\n}\nexport default Requests;"],"sourceRoot":""}